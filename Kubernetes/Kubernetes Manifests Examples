apiVersion: 
kind: Deployment
metadata:
  name: 
  labels: 
  annotations: 
spec:
  selector:
    matchLabels: 
  replicas: 
  template:
    metadata:
      labels: 
      annotations:
    spec:
      yamllint disable rule:indentation
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      yamllint enable rule:indentation
      affinity: 
      affinity:
        podAffinity: 
        podAntiAffinity: 
        nodeAffinity: 
      nodeSelector: 
      tolerations: 
      topologySpreadConstraints: 
      initContainers:
        - name: 
          image: 
          imagePullPolicy: 
          command:
            - /bin/bash
            - -ec
            - |
              [[ -f "/opt/bitnami/scripts/git/entrypoint.sh" ]] && source "/opt/bitnami/scripts/git/entrypoint.sh"
              git clone {{ .Values.cloneHtdocsFromGit.repository }} --branch {{ .Values.cloneHtdocsFromGit.branch }} /tmp/repo
              [[ "$?" -eq 0 ]] && rm -rf /app/* && mv /tmp/repo/* /app/
          resources: 
          volumeMounts:
            - name: 
              mountPath: 
      containers:
        - name: 
          image: 
          imagePullPolicy: 
          command:
            - /bin/bash
            - -ec
            - |
              [[ -f "/opt/bitnami/scripts/git/entrypoint.sh" ]] && source "/opt/bitnami/scripts/git/entrypoint.sh"
              while true; do
                  cd /app && git pull origin {{ .Values.cloneHtdocsFromGit.branch }}
                  sleep {{ .Values.cloneHtdocsFromGit.interval }}
              done
          resources: 
          volumeMounts:
            - name: 
              mountPath: 
        - name: 
          image: 
          imagePullPolicy: 
          env:
            - name: 
              value: 
          ports:
            - name: 
              containerPort:
            - name: 
              containerPort: 
          livenessProbe:
            httpGet:
              path: 
              port: 
            initialDelaySeconds: 
            periodSeconds: 
            timeoutSeconds: 
            successThreshold: 
            failureThreshold: 
          readinessProbe:
            httpGet:
              path: 
              port: 
            initialDelaySeconds: 
            periodSeconds: 
            timeoutSeconds: 
            successThreshold: 
            failureThreshold: 
          resources: 
          volumeMounts:
            - name: 
              mountPath:
            - name: 
              mountPath: 
            - name: 
              mountPath: 
              subPath: 
        - name: 
          image: 
          imagePullPolicy: 
          command: ['/bin/apache_exporter', '--scrape_uri', 'http://status.localhost:8080/server-status/?auto']
          ports:
            - name: 
              containerPort: 
          livenessProbe:
            httpGet:
              path: 
              port: 
            initialDelaySeconds: 
            timeoutSeconds: 
          readinessProbe:
            httpGet:
              path: 
              port: 
            initialDelaySeconds: 
            timeoutSeconds: 
          resources: 
      volumes:
        - name: 
        - name: 
          configMap:
            name: 
        - name: 
          configMap:
            name: 
